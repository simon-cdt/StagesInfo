{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"border-input file:text-foreground placeholder:text-muted-foreground/70 flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-sm shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        type === \"search\" &&\n          \"[&::-webkit-search-cancel-button]:appearance-none [&::-webkit-search-decoration]:appearance-none [&::-webkit-search-results-button]:appearance-none [&::-webkit-search-results-decoration]:appearance-none\",\n        type === \"file\" &&\n          \"text-muted-foreground/70 file:border-input file:text-foreground p-0 pr-3 italic file:me-3 file:h-full file:border-0 file:border-r file:border-solid file:bg-transparent file:px-3 file:text-sm file:font-medium file:not-italic\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,iXACA,iFACA,0GACA,SAAS,YACP,8MACF,SAAS,UACP,mOACF;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/table.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted data-[state=selected]:bg-muted border-b transition-colors\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/Icon.tsx"],"sourcesContent":["import Image from \"next/image\";\r\nimport React from \"react\";\r\n\r\nexport default function Icon({\r\n  src,\r\n  className,\r\n}: {\r\n  src: string;\r\n  className?: string;\r\n}) {\r\n  return (\r\n    <Image\r\n      src={`/icon/${src}.svg`}\r\n      alt=\"Icon\"\r\n      width={700}\r\n      height={700}\r\n      className={className ? className : \"w-4\"}\r\n    />\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAGe,SAAS,KAAK,EAC3B,GAAG,EACH,SAAS,EAIV;IACC,qBACE,6LAAC,gIAAA,CAAA,UAAK;QACJ,KAAK,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC;QACvB,KAAI;QACJ,OAAO;QACP,QAAQ;QACR,WAAW,YAAY,YAAY;;;;;;AAGzC;KAhBwB","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nfunction AlertDialog({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Root>) {\n  return <AlertDialogPrimitive.Root data-slot=\"alert-dialog\" {...props} />\n}\n\nfunction AlertDialogTrigger({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Trigger>) {\n  return (\n    <AlertDialogPrimitive.Trigger data-slot=\"alert-dialog-trigger\" {...props} />\n  )\n}\n\nfunction AlertDialogPortal({\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Portal>) {\n  return (\n    <AlertDialogPrimitive.Portal data-slot=\"alert-dialog-portal\" {...props} />\n  )\n}\n\nfunction AlertDialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Overlay>) {\n  return (\n    <AlertDialogPrimitive.Overlay\n      data-slot=\"alert-dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Content>) {\n  return (\n    <AlertDialogPortal>\n      <AlertDialogOverlay />\n      <AlertDialogPrimitive.Content\n        data-slot=\"alert-dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      />\n    </AlertDialogPortal>\n  )\n}\n\nfunction AlertDialogHeader({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogFooter({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Title>) {\n  return (\n    <AlertDialogPrimitive.Title\n      data-slot=\"alert-dialog-title\"\n      className={cn(\"text-lg font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Description>) {\n  return (\n    <AlertDialogPrimitive.Description\n      data-slot=\"alert-dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogAction({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Action>) {\n  return (\n    <AlertDialogPrimitive.Action\n      className={cn(buttonVariants(), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDialogCancel({\n  className,\n  ...props\n}: React.ComponentProps<typeof AlertDialogPrimitive.Cancel>) {\n  return (\n    <AlertDialogPrimitive.Cancel\n      className={cn(buttonVariants({ variant: \"outline\" }), className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAGA;AAEA;AACA;AANA;;;;;AAQA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,6LAAC,8KAAA,CAAA,OAAyB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AACtE;KAJS;AAMT,SAAS,mBAAmB,EAC1B,GAAG,OACuD;IAC1D,qBACE,6LAAC,8KAAA,CAAA,UAA4B;QAAC,aAAU;QAAwB,GAAG,KAAK;;;;;;AAE5E;MANS;AAQT,SAAS,kBAAkB,EACzB,GAAG,OACsD;IACzD,qBACE,6LAAC,8KAAA,CAAA,SAA2B;QAAC,aAAU;QAAuB,GAAG,KAAK;;;;;;AAE1E;MANS;AAQT,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,6LAAC,8KAAA,CAAA,UAA4B;QAC3B,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,mBAAmB,EAC1B,SAAS,EACT,GAAG,OACuD;IAC1D,qBACE,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,8KAAA,CAAA,UAA4B;gBAC3B,aAAU;gBACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;;;;;;;;;;;AAIjB;MAjBS;AAmBT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACqD;IACxD,qBACE,6LAAC,8KAAA,CAAA,QAA0B;QACzB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,6LAAC,8KAAA,CAAA,cAAgC;QAC/B,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,8KAAA,CAAA,SAA2B;QAC1B,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;AAGf;MAVS;AAYT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,8KAAA,CAAA,SAA2B;QAC1B,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IAAI;QACrD,GAAG,KAAK;;;;;;AAGf;OAVS","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/dialog.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { XIcon } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className,\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"pointer ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  );\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className,\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 592, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Separator({\n  className,\n  orientation = \"horizontal\",\n  decorative = true,\n  ...props\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\n  return (\n    <SeparatorPrimitive.Root\n      data-slot=\"separator-root\"\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,UAAU,EACjB,SAAS,EACT,cAAc,YAAY,EAC1B,aAAa,IAAI,EACjB,GAAG,OACkD;IACrD,qBACE,6LAAC,wKAAA,CAAA,OAAuB;QACtB,aAAU;QACV,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,kKACA;QAED,GAAG,KAAK;;;;;;AAGf;KAlBS","debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"text-foreground text-sm leading-4 font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,4MACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/form/FormField.tsx"],"sourcesContent":["import { Label } from \"@/components/ui/label\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { FieldError } from \"react-hook-form\";\r\nimport { Textarea } from \"../ui/textarea\";\r\n\r\ninterface FormFieldProps {\r\n  label: string;\r\n  name: string;\r\n  type: \"text\" | \"password\" | \"email\" | \"file\";\r\n  placeholder?: string;\r\n  // eslint-disable-next-line\r\n  register: any;\r\n  error?: FieldError;\r\n  icon?: React.ReactNode;\r\n  defaultValue?: string;\r\n  textarea?: boolean;\r\n}\r\n\r\nexport const FormField = ({\r\n  label,\r\n  name,\r\n  type,\r\n  placeholder,\r\n  register,\r\n  error,\r\n  icon,\r\n  defaultValue,\r\n  textarea,\r\n}: FormFieldProps) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-2\">\r\n      <Label htmlFor={name}>{label}</Label>\r\n      <div className=\"relative\">\r\n        {icon && (\r\n          <div className=\"text-muted-foreground absolute top-1/2 left-3 -translate-y-1/2\">\r\n            {icon}\r\n          </div>\r\n        )}\r\n        {textarea ? (\r\n          <Textarea\r\n            id={name}\r\n            placeholder={placeholder}\r\n            {...register(name)}\r\n            className={icon ? \"pl-9\" : \"\"}\r\n            defaultValue={defaultValue}\r\n          />\r\n        ) : (\r\n          <Input\r\n            id={name}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            {...register(name)}\r\n            className={icon ? \"pl-9\" : \"\"}\r\n            defaultValue={defaultValue}\r\n          />\r\n        )}\r\n      </div>\r\n      {error && <p className=\"text-sm text-red-500\">{error.message}</p>}\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;AAeO,MAAM,YAAY,CAAC,EACxB,KAAK,EACL,IAAI,EACJ,IAAI,EACJ,WAAW,EACX,QAAQ,EACR,KAAK,EACL,IAAI,EACJ,YAAY,EACZ,QAAQ,EACO;IACf,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,6HAAA,CAAA,QAAK;gBAAC,SAAS;0BAAO;;;;;;0BACvB,6LAAC;gBAAI,WAAU;;oBACZ,sBACC,6LAAC;wBAAI,WAAU;kCACZ;;;;;;oBAGJ,yBACC,6LAAC,gIAAA,CAAA,WAAQ;wBACP,IAAI;wBACJ,aAAa;wBACZ,GAAG,SAAS,KAAK;wBAClB,WAAW,OAAO,SAAS;wBAC3B,cAAc;;;;;6CAGhB,6LAAC,6HAAA,CAAA,QAAK;wBACJ,IAAI;wBACJ,MAAM;wBACN,aAAa;wBACZ,GAAG,SAAS,KAAK;wBAClB,WAAW,OAAO,SAAS;wBAC3B,cAAc;;;;;;;;;;;;YAInB,uBAAS,6LAAC;gBAAE,WAAU;0BAAwB,MAAM,OAAO;;;;;;;;;;;;AAGlE;KA1Ca","debugId":null}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"pointer peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-current transition-none\"\n      >\n        <CheckIcon className=\"size-3.5\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  );\n}\n\nexport { Checkbox };\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,ufACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;sBAEV,cAAA,6LAAC,2MAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI7B;KArBS","debugId":null}},
    {"offset": {"line": 885, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/lib/actions/admin/entreprises/admin.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { getServerSession } from \"next-auth\";\r\nimport { authOptions } from \"@/lib/auth\";\r\nimport { db } from \"@/lib/db\";\r\nimport * as argon2 from \"argon2\";\r\n\r\nexport const updateEntreprise = async ({\r\n  id,\r\n  nom,\r\n  email,\r\n  adresse,\r\n  secteurs,\r\n}: {\r\n  id: string;\r\n  nom: string;\r\n  email: string;\r\n  adresse: string;\r\n  secteurs: string[];\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    const emailExist = await db.entreprise.findUnique({\r\n      where: {\r\n        email: email,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (emailExist && emailExist.id !== entreprise.id) {\r\n      return { success: false, message: \"Cet email est déjà utilisé.\" };\r\n    }\r\n\r\n    await db.entreprise.update({\r\n      where: { id },\r\n      data: {\r\n        nom,\r\n        email,\r\n        adresse,\r\n        secteurs: {\r\n          deleteMany: {\r\n            idEntreprise: entreprise.id,\r\n          },\r\n          createMany: {\r\n            data: secteurs.map((id: string) => ({ idSecteur: id })),\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"L'entreprise a bien été modifée\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const updateContact = async ({\r\n  id,\r\n  nom,\r\n  prenom,\r\n  email,\r\n}: {\r\n  id: string;\r\n  nom: string;\r\n  prenom: string;\r\n  email: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const contact = await db.contact.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!contact) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    await db.contact.update({\r\n      where: { id },\r\n      data: {\r\n        nom,\r\n        prenom,\r\n        email,\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"Le contact a bien été modifié\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const updateEntreprisePassword = async ({\r\n  id,\r\n  mdp,\r\n}: {\r\n  id: string;\r\n  mdp: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    const hashedPassword = await argon2.hash(mdp);\r\n\r\n    await db.entreprise.update({\r\n      where: { id },\r\n      data: {\r\n        mdp: hashedPassword,\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"Le mot de passe a bien été modifié\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const deleteEntreprise = async ({\r\n  id,\r\n}: {\r\n  id: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    await db.candidature.deleteMany({\r\n      where: {\r\n        stage: {\r\n          entrepriseId: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    await db.stage.deleteMany({\r\n      where: {\r\n        entrepriseId: id,\r\n      },\r\n    });\r\n\r\n    await db.secteurEntreprise.deleteMany({\r\n      where: {\r\n        idEntreprise: id,\r\n      },\r\n    });\r\n\r\n    await db.entreprise.delete({\r\n      where: {\r\n        id,\r\n      },\r\n    });\r\n\r\n    await db.contact.deleteMany({\r\n      where: {\r\n        entreprise: {\r\n          id: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"L'entreprise a bien été supprimée\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;;IAOa,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 901, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/form/admin/entreprises/updateInformations.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Loader2 } from \"lucide-react\";\r\nimport { FormField } from \"../../FormField\";\r\nimport Icon from \"@/components/Icon\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { FetchSecteursList } from \"@/types/types\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { updateEntreprise } from \"@/lib/actions/admin/entreprises/admin\";\r\nimport { useState } from \"react\";\r\n\r\nfunction useSecteurs() {\r\n  return useQuery({\r\n    queryKey: [\"secteurs\"],\r\n    queryFn: async (): Promise<FetchSecteursList> => {\r\n      const response = await fetch(`/api/secteurs`);\r\n      return await response.json();\r\n    },\r\n  });\r\n}\r\n\r\nexport default function UpdateEntrepriseAdminInformationsForm({\r\n  entreprise,\r\n  refetch,\r\n}: {\r\n  entreprise: {\r\n    id: string;\r\n    nom: string;\r\n    email: string;\r\n    adresse: string;\r\n    secteurs: string[];\r\n  };\r\n  refetch: () => void;\r\n}) {\r\n  const { data: secteurs } = useSecteurs();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const zodFormSchema = z.object({\r\n    nom: z.string().nonempty(\"Le nom est requis.\"),\r\n    adresse: z.string().nonempty(\"L'adresse est requise.\"),\r\n    email: z\r\n      .string()\r\n      .email(\"L'email doit être valide.\")\r\n      .nonempty(\"L'e-mail est requis.\"),\r\n    secteurs: z.array(z.string()).min(1, \"Au moins un secteur est requis.\"),\r\n  });\r\n  type FormSchema = z.infer<typeof zodFormSchema>;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    watch,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm<FormSchema>({\r\n    resolver: zodResolver(zodFormSchema),\r\n    defaultValues: {\r\n      nom: entreprise.nom,\r\n      adresse: entreprise.adresse,\r\n      email: entreprise.email,\r\n      secteurs: entreprise.secteurs,\r\n    },\r\n  });\r\n\r\n  const secteursWatch = watch(\"secteurs\");\r\n  const toggleSecteur = (id: string, checked: boolean) => {\r\n    const current = watch(\"secteurs\") || [];\r\n    const updated = checked\r\n      ? [...current, id]\r\n      : current.filter((secteurId) => secteurId !== id);\r\n\r\n    setValue(\"secteurs\", updated, { shouldValidate: true });\r\n  };\r\n\r\n  const handleSubmitForm = async (data: FormSchema) => {\r\n    const response = await updateEntreprise({\r\n      id: entreprise.id,\r\n      nom: data.nom,\r\n      email: data.email,\r\n      adresse: data.adresse,\r\n      secteurs: data.secteurs,\r\n    });\r\n    if (response.success) {\r\n      toast.success(response.message);\r\n      refetch();\r\n    } else {\r\n      toast.error(response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogTrigger asChild>\r\n        <Button variant=\"outline\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <Icon src=\"page-edit\" />\r\n            <p>Modifier</p>\r\n          </div>\r\n        </Button>\r\n      </DialogTrigger>\r\n      <DialogContent className=\"\">\r\n        <DialogHeader>\r\n          <DialogTitle>Modifier l&apos;entreprise</DialogTitle>\r\n          <DialogDescription>\r\n            Vous pouvez changer les informations de l&apos;entreprise juste ici.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit(handleSubmitForm)}>\r\n          <div className=\"grid gap-4 py-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <FormField\r\n                label=\"Nom\"\r\n                name=\"nom\"\r\n                type=\"text\"\r\n                defaultValue={entreprise.nom}\r\n                register={register}\r\n                error={errors.nom}\r\n                icon={<Icon src=\"user\" />}\r\n              />\r\n              <FormField\r\n                label=\"E-mail\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                defaultValue={entreprise.email}\r\n                register={register}\r\n                error={errors.email}\r\n                icon={<Icon src=\"mail\" />}\r\n              />\r\n            </div>\r\n            <FormField\r\n              label=\"Adresse\"\r\n              name=\"adresse\"\r\n              type=\"text\"\r\n              defaultValue={entreprise.adresse}\r\n              register={register}\r\n              error={errors.adresse}\r\n              icon={<Icon src=\"map-pin\" />}\r\n            />\r\n            <div className=\"flex flex-wrap gap-y-5\">\r\n              {secteurs &&\r\n                secteurs.map((secteur) => {\r\n                  return (\r\n                    <div\r\n                      key={secteur.id}\r\n                      className=\"flex w-[50%] items-center gap-2\"\r\n                    >\r\n                      <Checkbox\r\n                        id={`secteur-${secteur.id}`}\r\n                        checked={secteursWatch?.includes(secteur.id)}\r\n                        onCheckedChange={(checked) =>\r\n                          toggleSecteur(secteur.id, Boolean(checked))\r\n                        }\r\n                      />\r\n                      <Label\r\n                        htmlFor={`secteur-${secteur.id}`}\r\n                        className=\"text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n                      >\r\n                        {secteur.label}\r\n                      </Label>\r\n                    </div>\r\n                  );\r\n                })}\r\n              {errors.secteurs && (\r\n                <p className=\"text-sm text-red-500\">\r\n                  {errors.secteurs.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex w-full items-center justify-between gap-2\">\r\n              <Button\r\n                type=\"button\"\r\n                className=\"w-max\"\r\n                variant={\"outline\"}\r\n                onClick={() => setOpen(false)}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button\r\n                disabled={isSubmitting}\r\n                variant={`${isSubmitting ? \"disable\" : \"default\"}`}\r\n                className=\"w-max\"\r\n                type=\"submit\"\r\n              >\r\n                {isSubmitting ? (\r\n                  <Loader2 className=\"animate-spin\" />\r\n                ) : (\r\n                  \"Sauvegarder les modifications\"\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1262, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/lib/actions/admin/entreprises/admin.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { getServerSession } from \"next-auth\";\r\nimport { authOptions } from \"@/lib/auth\";\r\nimport { db } from \"@/lib/db\";\r\nimport * as argon2 from \"argon2\";\r\n\r\nexport const updateEntreprise = async ({\r\n  id,\r\n  nom,\r\n  email,\r\n  adresse,\r\n  secteurs,\r\n}: {\r\n  id: string;\r\n  nom: string;\r\n  email: string;\r\n  adresse: string;\r\n  secteurs: string[];\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    const emailExist = await db.entreprise.findUnique({\r\n      where: {\r\n        email: email,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (emailExist && emailExist.id !== entreprise.id) {\r\n      return { success: false, message: \"Cet email est déjà utilisé.\" };\r\n    }\r\n\r\n    await db.entreprise.update({\r\n      where: { id },\r\n      data: {\r\n        nom,\r\n        email,\r\n        adresse,\r\n        secteurs: {\r\n          deleteMany: {\r\n            idEntreprise: entreprise.id,\r\n          },\r\n          createMany: {\r\n            data: secteurs.map((id: string) => ({ idSecteur: id })),\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"L'entreprise a bien été modifée\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const updateContact = async ({\r\n  id,\r\n  nom,\r\n  prenom,\r\n  email,\r\n}: {\r\n  id: string;\r\n  nom: string;\r\n  prenom: string;\r\n  email: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const contact = await db.contact.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!contact) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    await db.contact.update({\r\n      where: { id },\r\n      data: {\r\n        nom,\r\n        prenom,\r\n        email,\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"Le contact a bien été modifié\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const updateEntreprisePassword = async ({\r\n  id,\r\n  mdp,\r\n}: {\r\n  id: string;\r\n  mdp: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    const hashedPassword = await argon2.hash(mdp);\r\n\r\n    await db.entreprise.update({\r\n      where: { id },\r\n      data: {\r\n        mdp: hashedPassword,\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"Le mot de passe a bien été modifié\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const deleteEntreprise = async ({\r\n  id,\r\n}: {\r\n  id: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    await db.candidature.deleteMany({\r\n      where: {\r\n        stage: {\r\n          entrepriseId: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    await db.stage.deleteMany({\r\n      where: {\r\n        entrepriseId: id,\r\n      },\r\n    });\r\n\r\n    await db.secteurEntreprise.deleteMany({\r\n      where: {\r\n        idEntreprise: id,\r\n      },\r\n    });\r\n\r\n    await db.entreprise.delete({\r\n      where: {\r\n        id,\r\n      },\r\n    });\r\n\r\n    await db.contact.deleteMany({\r\n      where: {\r\n        entreprise: {\r\n          id: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"L'entreprise a bien été supprimée\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;;IA2Ea,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1278, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/form/admin/entreprises/updateContact.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Loader2 } from \"lucide-react\";\r\nimport { FormField } from \"../../FormField\";\r\nimport Icon from \"@/components/Icon\";\r\nimport toast from \"react-hot-toast\";\r\nimport { updateContact } from \"@/lib/actions/admin/entreprises/admin\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function UpdateEntrepriseContactAdminForm({\r\n  contact,\r\n  refetch,\r\n}: {\r\n  contact: {\r\n    id: string;\r\n    nom: string;\r\n    prenom: string;\r\n    email: string;\r\n  };\r\n  refetch: () => void;\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const zodFormSchema = z.object({\r\n    nom: z.string().nonempty(\"Le nom est requis.\"),\r\n    prenom: z.string().nonempty(\"Le preénom est requis.\"),\r\n    email: z\r\n      .string()\r\n      .email(\"L'email doit être valide.\")\r\n      .nonempty(\"L'e-mail est requis.\"),\r\n  });\r\n  type FormSchema = z.infer<typeof zodFormSchema>;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm<FormSchema>({\r\n    resolver: zodResolver(zodFormSchema),\r\n    defaultValues: {\r\n      nom: contact.nom,\r\n      prenom: contact.prenom,\r\n      email: contact.email,\r\n    },\r\n  });\r\n\r\n  const handleSubmitForm = async (data: FormSchema) => {\r\n    const response = await updateContact({\r\n      id: contact.id,\r\n      nom: data.nom,\r\n      prenom: data.prenom,\r\n      email: data.email,\r\n    });\r\n    if (response.success) {\r\n      toast.success(response.message);\r\n      refetch();\r\n    } else {\r\n      toast.error(response.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogTrigger asChild>\r\n        <Button variant=\"outline\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <Icon src=\"page-edit\" />\r\n            <p>Modifier le contact</p>\r\n          </div>\r\n        </Button>\r\n      </DialogTrigger>\r\n      <DialogContent className=\"\">\r\n        <DialogHeader>\r\n          <DialogTitle>Modifier le contact de l&apos;entreprise</DialogTitle>\r\n          <DialogDescription>\r\n            Vous pouvez changer les informations du contact de l&apos;entreprise\r\n            juste ici.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit(handleSubmitForm)}>\r\n          <div className=\"grid gap-4 py-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <FormField\r\n                label=\"Nom\"\r\n                name=\"nom\"\r\n                type=\"text\"\r\n                register={register}\r\n                error={errors.nom}\r\n                icon={<Icon src=\"user\" />}\r\n              />\r\n              <FormField\r\n                label=\"Preénom\"\r\n                name=\"prenom\"\r\n                type=\"text\"\r\n                register={register}\r\n                error={errors.prenom}\r\n                icon={<Icon src=\"map-pin\" />}\r\n              />\r\n            </div>\r\n            <FormField\r\n              label=\"E-mail\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              register={register}\r\n              error={errors.email}\r\n              icon={<Icon src=\"mail\" />}\r\n            />\r\n\r\n            <div className=\"flex w-full items-center justify-between gap-2\">\r\n              <Button\r\n                type=\"button\"\r\n                className=\"w-max\"\r\n                variant={\"outline\"}\r\n                onClick={() => setOpen(false)}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button\r\n                disabled={isSubmitting}\r\n                variant={`${isSubmitting ? \"disable\" : \"default\"}`}\r\n                className=\"w-max\"\r\n                type=\"submit\"\r\n              >\r\n                {isSubmitting ? (\r\n                  <Loader2 className=\"animate-spin\" />\r\n                ) : (\r\n                  \"Sauvegarder les modifications\"\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1549, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/form/PasswordField.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { EyeIcon, EyeOffIcon } from \"lucide-react\";\n\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport Image from \"next/image\";\n\nexport default function PasswordField({\n  id,\n  register,\n  label,\n  errorsForm,\n}: {\n  id: string;\n  // eslint-disable-next-line\n  register: any;\n  label: string;\n  errorsForm: string | undefined;\n}) {\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const toggleVisibility = () => setIsVisible((prevState) => !prevState);\n\n  return (\n    <div className=\"flex flex-col gap-2 *:not-first:mt-2\">\n      <Label htmlFor={id}>{label}</Label>\n      <div className=\"relative\">\n        <div className=\"text-muted-foreground absolute top-1/2 left-3 -translate-y-1/2\">\n          <Image\n            src={\"/icon/lock.svg\"}\n            alt=\"Icon\"\n            width={700}\n            height={700}\n            className=\"w-4\"\n          />\n        </div>\n        <Input\n          id={id}\n          className=\"pe-9 pl-9\"\n          placeholder=\"********\"\n          type={isVisible ? \"text\" : \"password\"}\n          {...register(id)}\n        />\n        <button\n          className=\"pointer text-muted-foreground/80 hover:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 absolute inset-y-0 end-0 flex h-full w-9 items-center justify-center rounded-e-md transition-[color,box-shadow] outline-none focus:z-10 focus-visible:ring-[3px] disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\"\n          type=\"button\"\n          onClick={toggleVisibility}\n          aria-label={\n            isVisible ? \"Cacher le mot de passe\" : \"Afficher le mot de passe\"\n          }\n          aria-pressed={isVisible}\n          aria-controls=\"password\"\n        >\n          {isVisible ? (\n            <EyeOffIcon size={16} aria-hidden=\"true\" />\n          ) : (\n            <EyeIcon size={16} aria-hidden=\"true\" />\n          )}\n        </button>\n      </div>\n      {errorsForm && <p className=\"text-sm text-red-500\">{errorsForm}</p>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAEA;AACA;AACA;;;AAPA;;;;;;AASe,SAAS,cAAc,EACpC,EAAE,EACF,QAAQ,EACR,KAAK,EACL,UAAU,EAOX;;IACC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAEpD,MAAM,mBAAmB,IAAM,aAAa,CAAC,YAAc,CAAC;IAE5D,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,6HAAA,CAAA,QAAK;gBAAC,SAAS;0BAAK;;;;;;0BACrB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAK;4BACL,KAAI;4BACJ,OAAO;4BACP,QAAQ;4BACR,WAAU;;;;;;;;;;;kCAGd,6LAAC,6HAAA,CAAA,QAAK;wBACJ,IAAI;wBACJ,WAAU;wBACV,aAAY;wBACZ,MAAM,YAAY,SAAS;wBAC1B,GAAG,SAAS,GAAG;;;;;;kCAElB,6LAAC;wBACC,WAAU;wBACV,MAAK;wBACL,SAAS;wBACT,cACE,YAAY,2BAA2B;wBAEzC,gBAAc;wBACd,iBAAc;kCAEb,0BACC,6LAAC,iNAAA,CAAA,aAAU;4BAAC,MAAM;4BAAI,eAAY;;;;;iDAElC,6LAAC,uMAAA,CAAA,UAAO;4BAAC,MAAM;4BAAI,eAAY;;;;;;;;;;;;;;;;;YAIpC,4BAAc,6LAAC;gBAAE,WAAU;0BAAwB;;;;;;;;;;;;AAG1D;GAxDwB;KAAA","debugId":null}},
    {"offset": {"line": 1675, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/lib/actions/admin/entreprises/admin.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { getServerSession } from \"next-auth\";\r\nimport { authOptions } from \"@/lib/auth\";\r\nimport { db } from \"@/lib/db\";\r\nimport * as argon2 from \"argon2\";\r\n\r\nexport const updateEntreprise = async ({\r\n  id,\r\n  nom,\r\n  email,\r\n  adresse,\r\n  secteurs,\r\n}: {\r\n  id: string;\r\n  nom: string;\r\n  email: string;\r\n  adresse: string;\r\n  secteurs: string[];\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    const emailExist = await db.entreprise.findUnique({\r\n      where: {\r\n        email: email,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (emailExist && emailExist.id !== entreprise.id) {\r\n      return { success: false, message: \"Cet email est déjà utilisé.\" };\r\n    }\r\n\r\n    await db.entreprise.update({\r\n      where: { id },\r\n      data: {\r\n        nom,\r\n        email,\r\n        adresse,\r\n        secteurs: {\r\n          deleteMany: {\r\n            idEntreprise: entreprise.id,\r\n          },\r\n          createMany: {\r\n            data: secteurs.map((id: string) => ({ idSecteur: id })),\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"L'entreprise a bien été modifée\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const updateContact = async ({\r\n  id,\r\n  nom,\r\n  prenom,\r\n  email,\r\n}: {\r\n  id: string;\r\n  nom: string;\r\n  prenom: string;\r\n  email: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const contact = await db.contact.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!contact) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    await db.contact.update({\r\n      where: { id },\r\n      data: {\r\n        nom,\r\n        prenom,\r\n        email,\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"Le contact a bien été modifié\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const updateEntreprisePassword = async ({\r\n  id,\r\n  mdp,\r\n}: {\r\n  id: string;\r\n  mdp: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    const hashedPassword = await argon2.hash(mdp);\r\n\r\n    await db.entreprise.update({\r\n      where: { id },\r\n      data: {\r\n        mdp: hashedPassword,\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"Le mot de passe a bien été modifié\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const deleteEntreprise = async ({\r\n  id,\r\n}: {\r\n  id: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    await db.candidature.deleteMany({\r\n      where: {\r\n        stage: {\r\n          entrepriseId: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    await db.stage.deleteMany({\r\n      where: {\r\n        entrepriseId: id,\r\n      },\r\n    });\r\n\r\n    await db.secteurEntreprise.deleteMany({\r\n      where: {\r\n        idEntreprise: id,\r\n      },\r\n    });\r\n\r\n    await db.entreprise.delete({\r\n      where: {\r\n        id,\r\n      },\r\n    });\r\n\r\n    await db.contact.deleteMany({\r\n      where: {\r\n        entreprise: {\r\n          id: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"L'entreprise a bien été supprimée\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;;IA2Ha,2BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1691, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/form/admin/entreprises/updatePassword.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Loader2 } from \"lucide-react\";\r\nimport { useState } from \"react\";\r\nimport Icon from \"@/components/Icon\";\r\nimport toast from \"react-hot-toast\";\r\nimport PasswordField from \"../../PasswordField\";\r\nimport { updateEntreprisePassword } from \"@/lib/actions/admin/entreprises/admin\";\r\n\r\nexport default function UpdateEntrepriseAdminPasswordForm({\r\n  id,\r\n}: {\r\n  id: string;\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const zodFormSchema = z\r\n    .object({\r\n      mdp: z\r\n        .string()\r\n        .nonempty(\"Le mot de passe est requis.\")\r\n        .min(8, \"Le mot de passe doit au moins faire huit caractères.\")\r\n        .regex(/^(?=.*[A-Z])(?=.*[!@#$%^&*(),.?\":{}|<>])(?=.*\\d).+$/, {\r\n          message:\r\n            \"Le mot de passe doit contenir au moins une majuscule, un chiffre et un caractère spécial\",\r\n        }),\r\n      confirmationMdp: z\r\n        .string()\r\n        .nonempty(\"La confirmation du mot de passe est requise.\"),\r\n    })\r\n    .refine((data) => data.mdp === data.confirmationMdp, {\r\n      path: [\"confirmationMdp\"],\r\n      message: \"Les mots de passe ne correspondent pas.\",\r\n    });\r\n\r\n  type FormSchema = z.infer<typeof zodFormSchema>;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm<FormSchema>({\r\n    resolver: zodResolver(zodFormSchema),\r\n  });\r\n\r\n  const handleSubmitForm = async (data: FormSchema) => {\r\n    const response = await updateEntreprisePassword({\r\n      id,\r\n      mdp: data.mdp,\r\n    });\r\n    if (response.success) {\r\n      toast.success(response.message);\r\n      setOpen(false);\r\n    } else {\r\n      toast.error(response.message);\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogTrigger asChild>\r\n        <Button variant=\"outline\">\r\n          <div className=\"flex items-center gap-1\">\r\n            <Icon src=\"lock\" />\r\n            <p>Modifier le mot de passe</p>\r\n          </div>\r\n        </Button>\r\n      </DialogTrigger>\r\n      <DialogContent className=\"\">\r\n        <DialogHeader>\r\n          <DialogTitle>Modifier</DialogTitle>\r\n          <DialogDescription>\r\n            Vous pouvez changer le mot de passe de l&apos;entreprise ici.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit(handleSubmitForm)}>\r\n          <div className=\"grid gap-4 py-4\">\r\n            <PasswordField\r\n              errorsForm={errors.mdp?.message}\r\n              id=\"mdp\"\r\n              label=\"Nouveau mot de passe\"\r\n              register={register}\r\n            />\r\n            <PasswordField\r\n              errorsForm={errors.confirmationMdp?.message}\r\n              id=\"confirmationMdp\"\r\n              label=\"Confirmation du nouveau mot de passe\"\r\n              register={register}\r\n            />\r\n\r\n            <div className=\"flex w-full items-center justify-between gap-2\">\r\n              <Button\r\n                type=\"button\"\r\n                className=\"w-max\"\r\n                variant={\"outline\"}\r\n                onClick={() => setOpen(false)}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button\r\n                disabled={isSubmitting}\r\n                variant={`${isSubmitting ? \"disable\" : \"default\"}`}\r\n                className=\"w-max\"\r\n                type=\"submit\"\r\n              >\r\n                {isSubmitting ? (\r\n                  <Loader2 className=\"animate-spin\" />\r\n                ) : (\r\n                  \"Sauvegarder les modifications\"\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnBA;;;;;;;;;;;;AAqBe,SAAS,kCAAkC,EACxD,EAAE,EAGH;;IACC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,gBAAgB,uIAAA,CAAA,IAAC,CACpB,MAAM,CAAC;QACN,KAAK,uIAAA,CAAA,IAAC,CACH,MAAM,GACN,QAAQ,CAAC,+BACT,GAAG,CAAC,GAAG,wDACP,KAAK,CAAC,uDAAuD;YAC5D,SACE;QACJ;QACF,iBAAiB,uIAAA,CAAA,IAAC,CACf,MAAM,GACN,QAAQ,CAAC;IACd,GACC,MAAM,CAAC,CAAC,OAAS,KAAK,GAAG,KAAK,KAAK,eAAe,EAAE;QACnD,MAAM;YAAC;SAAkB;QACzB,SAAS;IACX;IAIF,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,WAAW,EAAE,MAAM,EAAE,YAAY,EAAE,EACpC,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAc;QACtB,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;IACxB;IAEA,MAAM,mBAAmB,OAAO;QAC9B,MAAM,WAAW,MAAM,CAAA,GAAA,iLAAA,CAAA,2BAAwB,AAAD,EAAE;YAC9C;YACA,KAAK,KAAK,GAAG;QACf;QACA,IAAI,SAAS,OAAO,EAAE;YACpB,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC,SAAS,OAAO;YAC9B,QAAQ;QACV,OAAO;YACL,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,SAAS,OAAO;YAC5B,QAAQ;QACV;IACF;IAEA,qBACE,6LAAC,8HAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;;0BAChC,6LAAC,8HAAA,CAAA,gBAAa;gBAAC,OAAO;0BACpB,cAAA,6LAAC,8HAAA,CAAA,SAAM;oBAAC,SAAQ;8BACd,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,sHAAA,CAAA,UAAI;gCAAC,KAAI;;;;;;0CACV,6LAAC;0CAAE;;;;;;;;;;;;;;;;;;;;;;0BAIT,6LAAC,8HAAA,CAAA,gBAAa;gBAAC,WAAU;;kCACvB,6LAAC,8HAAA,CAAA,eAAY;;0CACX,6LAAC,8HAAA,CAAA,cAAW;0CAAC;;;;;;0CACb,6LAAC,8HAAA,CAAA,oBAAiB;0CAAC;;;;;;;;;;;;kCAIrB,6LAAC;wBAAK,UAAU,aAAa;kCAC3B,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,uIAAA,CAAA,UAAa;oCACZ,YAAY,OAAO,GAAG,EAAE;oCACxB,IAAG;oCACH,OAAM;oCACN,UAAU;;;;;;8CAEZ,6LAAC,uIAAA,CAAA,UAAa;oCACZ,YAAY,OAAO,eAAe,EAAE;oCACpC,IAAG;oCACH,OAAM;oCACN,UAAU;;;;;;8CAGZ,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,8HAAA,CAAA,SAAM;4CACL,MAAK;4CACL,WAAU;4CACV,SAAS;4CACT,SAAS,IAAM,QAAQ;sDACxB;;;;;;sDAGD,6LAAC,8HAAA,CAAA,SAAM;4CACL,UAAU;4CACV,SAAS,GAAG,eAAe,YAAY,WAAW;4CAClD,WAAU;4CACV,MAAK;sDAEJ,6BACC,6LAAC,oNAAA,CAAA,UAAO;gDAAC,WAAU;;;;;uDAEnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASlB;GA7GwB;;QAgClB,iKAAA,CAAA,UAAO;;;KAhCW","debugId":null}},
    {"offset": {"line": 1919, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/lib/actions/admin/entreprises/admin.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { getServerSession } from \"next-auth\";\r\nimport { authOptions } from \"@/lib/auth\";\r\nimport { db } from \"@/lib/db\";\r\nimport * as argon2 from \"argon2\";\r\n\r\nexport const updateEntreprise = async ({\r\n  id,\r\n  nom,\r\n  email,\r\n  adresse,\r\n  secteurs,\r\n}: {\r\n  id: string;\r\n  nom: string;\r\n  email: string;\r\n  adresse: string;\r\n  secteurs: string[];\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    const emailExist = await db.entreprise.findUnique({\r\n      where: {\r\n        email: email,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (emailExist && emailExist.id !== entreprise.id) {\r\n      return { success: false, message: \"Cet email est déjà utilisé.\" };\r\n    }\r\n\r\n    await db.entreprise.update({\r\n      where: { id },\r\n      data: {\r\n        nom,\r\n        email,\r\n        adresse,\r\n        secteurs: {\r\n          deleteMany: {\r\n            idEntreprise: entreprise.id,\r\n          },\r\n          createMany: {\r\n            data: secteurs.map((id: string) => ({ idSecteur: id })),\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"L'entreprise a bien été modifée\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const updateContact = async ({\r\n  id,\r\n  nom,\r\n  prenom,\r\n  email,\r\n}: {\r\n  id: string;\r\n  nom: string;\r\n  prenom: string;\r\n  email: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const contact = await db.contact.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!contact) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    await db.contact.update({\r\n      where: { id },\r\n      data: {\r\n        nom,\r\n        prenom,\r\n        email,\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"Le contact a bien été modifié\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const updateEntreprisePassword = async ({\r\n  id,\r\n  mdp,\r\n}: {\r\n  id: string;\r\n  mdp: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    const hashedPassword = await argon2.hash(mdp);\r\n\r\n    await db.entreprise.update({\r\n      where: { id },\r\n      data: {\r\n        mdp: hashedPassword,\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"Le mot de passe a bien été modifié\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n\r\nexport const deleteEntreprise = async ({\r\n  id,\r\n}: {\r\n  id: string;\r\n}): Promise<{ success: boolean; message: string }> => {\r\n  try {\r\n    const session = await getServerSession(authOptions);\r\n    if (!session || session.user.role !== \"admin\") {\r\n      return {\r\n        success: false,\r\n        message: \"Vous n'êtes pas autorisé à faire cette action\",\r\n      };\r\n    }\r\n    const entreprise = await db.entreprise.findUnique({\r\n      where: {\r\n        id,\r\n      },\r\n      select: { id: true },\r\n    });\r\n    if (!entreprise) {\r\n      return {\r\n        success: false,\r\n        message: \"Le compte n'existe pas\",\r\n      };\r\n    }\r\n\r\n    await db.candidature.deleteMany({\r\n      where: {\r\n        stage: {\r\n          entrepriseId: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    await db.stage.deleteMany({\r\n      where: {\r\n        entrepriseId: id,\r\n      },\r\n    });\r\n\r\n    await db.secteurEntreprise.deleteMany({\r\n      where: {\r\n        idEntreprise: id,\r\n      },\r\n    });\r\n\r\n    await db.entreprise.delete({\r\n      where: {\r\n        id,\r\n      },\r\n    });\r\n\r\n    await db.contact.deleteMany({\r\n      where: {\r\n        entreprise: {\r\n          id: id,\r\n        },\r\n      },\r\n    });\r\n\r\n    return { success: true, message: \"L'entreprise a bien été supprimée\" };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return { success: false, message: \"Une erreur est survenue\" };\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;;IAuKa,mBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1935, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/form/PasswordConditionsField.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { CheckIcon, EyeIcon, EyeOffIcon, XIcon } from \"lucide-react\";\n\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport Image from \"next/image\";\n\nexport default function PasswordConditionsField({\n  id,\n  setValue,\n  label,\n}: {\n  id: string;\n  // eslint-disable-next-line\n  setValue: any;\n  label: string;\n}) {\n  const [password, setPassword] = useState(\"\");\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n\n  const toggleVisibility = () => setIsVisible((prevState) => !prevState);\n\n  const checkStrength = (pass: string) => {\n    const requirements = [\n      { regex: /.{8,}/, text: \"Au moins huit caractères\" },\n      { regex: /[0-9]/, text: \"Au moins un chiffre\" },\n      {\n        regex: /[!@#$%^&*(),.?\":{}|<>]/,\n        text: \"Au moins un caractère spécial\",\n      },\n      { regex: /[A-Z]/, text: \"Au moins une majuscule\" },\n    ];\n\n    return requirements.map((req) => ({\n      met: req.regex.test(pass),\n      text: req.text,\n    }));\n  };\n\n  const strength = checkStrength(password);\n\n  const strengthScore = useMemo(() => {\n    return strength.filter((req) => req.met).length;\n  }, [strength]);\n\n  const getStrengthColor = (score: number) => {\n    if (score === 0) return \"bg-border\";\n    if (score <= 1) return \"bg-red-500\";\n    if (score <= 2) return \"bg-orange-500\";\n    if (score === 3) return \"bg-amber-500\";\n    return \"bg-emerald-500\";\n  };\n\n  useEffect(() => {\n    setValue(id, password, { shouldValidate: true });\n  }, [password, setValue]);\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      {/* Password input field with toggle visibility button */}\n      <div className=\"flex flex-col gap-2 *:not-first:mt-2\">\n        <Label htmlFor={id}>{label}</Label>\n        <div className=\"relative\">\n          <div className=\"text-muted-foreground absolute top-1/2 left-3 -translate-y-1/2\">\n            <Image\n              src={\"/icon/lock.svg\"}\n              alt=\"Icon\"\n              width={700}\n              height={700}\n              className=\"w-4\"\n            />\n          </div>\n          <Input\n            id={id}\n            className=\"pe-9 pl-9\"\n            placeholder=\"********\"\n            type={isVisible ? \"text\" : \"password\"}\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            aria-describedby={`${id}-description`}\n          />\n          <button\n            className=\"pointer text-muted-foreground/80 hover:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 absolute inset-y-0 end-0 flex h-full w-9 items-center justify-center rounded-e-md transition-[color,box-shadow] outline-none focus:z-10 focus-visible:ring-[3px] disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\"\n            type=\"button\"\n            onClick={toggleVisibility}\n            aria-label={\n              isVisible ? \"Cacher le mot de passe\" : \"Afficher le mot de passe\"\n            }\n            aria-pressed={isVisible}\n            aria-controls=\"password\"\n          >\n            {isVisible ? (\n              <EyeOffIcon size={16} aria-hidden=\"true\" />\n            ) : (\n              <EyeIcon size={16} aria-hidden=\"true\" />\n            )}\n          </button>\n        </div>\n      </div>\n\n      {/* Password strength indicator */}\n      <div\n        className=\"bg-border h-1 w-full overflow-hidden rounded-full\"\n        role=\"progressbar\"\n        aria-valuenow={strengthScore}\n        aria-valuemin={0}\n        aria-valuemax={4}\n        aria-label=\"La force du mot de passe\"\n      >\n        <div\n          className={`h-full ${getStrengthColor(strengthScore)} transition-all duration-500 ease-out`}\n          style={{ width: `${(strengthScore / 4) * 100}%` }}\n        ></div>\n      </div>\n\n      <div className=\"flex flex-col gap-1\">\n        {/* Password strength description */}\n        <p\n          id={`${id}-description`}\n          className=\"text-foreground mb-2 text-sm font-medium\"\n        >\n          Doit contenir :\n        </p>\n\n        {/* Password requirements list */}\n        <ul className=\"flex flex-col gap-1\" aria-label=\"Password requirements\">\n          {strength.map((req, index) => (\n            <li key={index} className=\"flex items-center gap-2\">\n              {req.met ? (\n                <CheckIcon\n                  size={16}\n                  className=\"text-emerald-500\"\n                  aria-hidden=\"true\"\n                />\n              ) : (\n                <XIcon\n                  size={16}\n                  className=\"text-muted-foreground/80\"\n                  aria-hidden=\"true\"\n                />\n              )}\n              <span\n                className={`text-xs ${req.met ? \"text-emerald-600\" : \"text-muted-foreground\"}`}\n              >\n                {req.text}\n                <span className=\"sr-only\">\n                  {req.met ? \" - Requirement met\" : \" - Requirement not met\"}\n                </span>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2210, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAoC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;KARS","debugId":null}},
    {"offset": {"line": 2241, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/components/form/admin/entreprises/create.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport Icon from \"@/components/Icon\";\r\nimport { Loader2 } from \"lucide-react\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport PasswordField from \"../../PasswordField\";\r\nimport PasswordConditionsField from \"../../PasswordConditionsField\";\r\nimport { FormField } from \"../../FormField\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { FetchSecteursList } from \"@/types/types\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\n\r\nfunction useSecteurs() {\r\n  return useQuery({\r\n    queryKey: [\"secteurs\"],\r\n    queryFn: async (): Promise<FetchSecteursList> => {\r\n      const response = await fetch(`/api/secteurs`);\r\n      return await response.json();\r\n    },\r\n  });\r\n}\r\n\r\nexport default function CreateEntrepriseAdminForm({\r\n  refetch,\r\n}: {\r\n  refetch: () => void;\r\n}) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { isError, data: secteurs, isLoading } = useSecteurs();\r\n\r\n  const zodFormSchema = z\r\n    .object({\r\n      nom: z.string().nonempty(\"Le nom est requis.\"),\r\n      adresse: z.string().nonempty(\"L'adresse est requise.\"),\r\n      email: z\r\n        .string()\r\n        .email(\"L'email doit être valide.\")\r\n        .nonempty(\"L'e-mail est requis.\"),\r\n      mdp: z\r\n        .string()\r\n        .nonempty(\"Le mot de passe est requis.\")\r\n        .min(8, \"Le mot de passe doit au moins faire huit caractères.\")\r\n        .regex(/^(?=.*[A-Z])(?=.*[!@#$%^&*(),.?\":{}|<>])(?=.*\\d).+$/, {\r\n          message:\r\n            \"Le mot de passe doit contenir au moins une majuscule, un chiffre et un caractère spécial\",\r\n        }),\r\n      confirmationMdp: z\r\n        .string()\r\n        .nonempty(\"La confirmation du mot de passe est requise.\"),\r\n      contactNom: z.string().nonempty(\"Le nom du contact est requis.\"),\r\n      contactPrenom: z.string().nonempty(\"Le prénom du contact est requis.\"),\r\n      contactEmail: z\r\n        .string()\r\n        .email(\"L'email doit être valide.\")\r\n        .nonempty(\"L'e-mail du contact est requis.\"),\r\n      secteurs: z.array(z.string()).min(1, \"Au moins un secteur est requis.\"),\r\n    })\r\n    .refine((data) => data.mdp === data.confirmationMdp, {\r\n      path: [\"confirmationMdp\"],\r\n      message: \"Les mots de passe ne correspondent pas.\",\r\n    });\r\n  type FormSchema = z.infer<typeof zodFormSchema>;\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    watch,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm<FormSchema>({\r\n    resolver: zodResolver(zodFormSchema),\r\n    defaultValues: {\r\n      secteurs: [],\r\n    },\r\n  });\r\n  const secteursWatch = watch(\"secteurs\");\r\n  const toggleSecteur = (id: string, checked: boolean) => {\r\n    const current = watch(\"secteurs\") || [];\r\n    const updated = checked\r\n      ? [...current, id]\r\n      : current.filter((secteurId) => secteurId !== id);\r\n\r\n    setValue(\"secteurs\", updated, { shouldValidate: true });\r\n  };\r\n\r\n  const handleSubmitForm = async (data: FormSchema) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogTrigger asChild>\r\n        <Button variant=\"outline\">Créer une entreprise</Button>\r\n      </DialogTrigger>\r\n      <DialogContent className=\"min-w-[700px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Créer une entreprise</DialogTitle>\r\n          <DialogDescription>\r\n            Remplissez le formulaire ci-dessous pour créer une nouvelle\r\n            entreprise.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <form onSubmit={handleSubmit(handleSubmitForm)}>\r\n          <div className=\"flex flex-col gap-6 p-6\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <FormField\r\n                label=\"Nom\"\r\n                name=\"nom\"\r\n                type=\"text\"\r\n                placeholder=\"Le nom de l'entreprise\"\r\n                register={register}\r\n                error={errors.nom}\r\n                icon={<Icon src=\"building\" />}\r\n              />\r\n              <FormField\r\n                label=\"E-mail\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"entreprise@mail.com\"\r\n                register={register}\r\n                error={errors.email}\r\n                icon={<Icon src=\"mail\" />}\r\n              />\r\n            </div>\r\n            <FormField\r\n              label=\"Adresse\"\r\n              name=\"adresse\"\r\n              type=\"text\"\r\n              placeholder=\"L'adresse de l'entreprise\"\r\n              register={register}\r\n              error={errors.adresse}\r\n              icon={<Icon src=\"map-pin\" />}\r\n            />\r\n\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <PasswordConditionsField\r\n                id=\"mdp\"\r\n                setValue={setValue}\r\n                label=\"Mot de passe\"\r\n              />\r\n              <PasswordField\r\n                id=\"confirmationMdp\"\r\n                register={register}\r\n                label=\"Confirmer le mot de passe\"\r\n                errorsForm={errors.confirmationMdp?.message}\r\n              />\r\n            </div>\r\n\r\n            <Separator className=\"bg-black/50\" />\r\n            <p className=\"font-semibold\">Contact de l&apos;entreprise</p>\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <FormField\r\n                label=\"Nom\"\r\n                name=\"contactNom\"\r\n                type=\"text\"\r\n                placeholder=\"Nom du contact\"\r\n                register={register}\r\n                error={errors.contactNom}\r\n                icon={<Icon src=\"user\" />}\r\n              />\r\n              <FormField\r\n                label=\"Prénom\"\r\n                name=\"contactPrenom\"\r\n                type=\"text\"\r\n                placeholder=\"Prénom du contact\"\r\n                register={register}\r\n                error={errors.contactPrenom}\r\n                icon={<Icon src=\"user\" />}\r\n              />\r\n            </div>\r\n            <FormField\r\n              label=\"E-mail\"\r\n              name=\"contactEmail\"\r\n              type=\"text\"\r\n              placeholder=\"contact@mail.com\"\r\n              register={register}\r\n              error={errors.contactEmail}\r\n              icon={<Icon src=\"mail\" />}\r\n            />\r\n\r\n            <Separator className=\"bg-black/50\" />\r\n            <p className=\"font-semibold\">Secteurs de l&apos;entreprise</p>\r\n            <div className=\"flex flex-wrap gap-y-5\">\r\n              {isLoading ? (\r\n                [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((index) => {\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className=\"flex w-[50%] items-center gap-2\"\r\n                    >\r\n                      <Skeleton className=\"h-5 w-5\" />\r\n                      <Skeleton className=\"h-5 w-60\" />\r\n                    </div>\r\n                  );\r\n                })\r\n              ) : isError ? (\r\n                <p className=\"font-semibold text-red-500\">\r\n                  Une erreur est survenue. Il n&apos;est pas possible de choisir\r\n                  un secteur actuellement. Veuillez réessayer plus tard...\r\n                </p>\r\n              ) : (\r\n                secteurs &&\r\n                secteurs.map((secteur) => {\r\n                  return (\r\n                    <div\r\n                      key={secteur.id}\r\n                      className=\"flex w-[50%] items-center gap-2\"\r\n                    >\r\n                      <Checkbox\r\n                        id={`secteur-${secteur.id}`}\r\n                        checked={secteursWatch?.includes(secteur.id)}\r\n                        onCheckedChange={(checked) =>\r\n                          toggleSecteur(secteur.id, Boolean(checked))\r\n                        }\r\n                      />\r\n                      <Label\r\n                        htmlFor={`secteur-${secteur.id}`}\r\n                        className=\"text-sm leading-none font-medium peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n                      >\r\n                        {secteur.label}\r\n                      </Label>\r\n                    </div>\r\n                  );\r\n                })\r\n              )}\r\n              {errors.secteurs && (\r\n                <p className=\"text-sm text-red-500\">\r\n                  {errors.secteurs.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"flex w-full items-center justify-between\">\r\n              <Button\r\n                type=\"button\"\r\n                variant={\"outline\"}\r\n                className=\"w-[48%]\"\r\n                onClick={() => setOpen(false)}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button\r\n                disabled={isSubmitting}\r\n                variant={`${isSubmitting ? \"disable\" : \"default\"}`}\r\n                className=\"w-[48%]\"\r\n                type=\"submit\"\r\n              >\r\n                {isSubmitting ? (\r\n                  <Loader2 className=\"animate-spin\" />\r\n                ) : (\r\n                  \"Créer mon compte\"\r\n                )}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2747, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/simon.cdt/Documents/StagesInfo/application/app/admin/entreprises/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { useQueryState } from \"nuqs\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport Icon from \"@/components/Icon\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogCancel,\r\n  AlertDialogContent,\r\n  AlertDialogDescription,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogTitle,\r\n  AlertDialogTrigger,\r\n} from \"@/components/ui/alert-dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport toast from \"react-hot-toast\";\r\nimport { Loader2 } from \"lucide-react\";\r\nimport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport UpdateEntrepriseAdminInformationsForm from \"@/components/form/admin/entreprises/updateInformations\";\r\nimport UpdateEntrepriseContactAdminForm from \"@/components/form/admin/entreprises/updateContact\";\r\nimport UpdateEntrepriseAdminPasswordForm from \"@/components/form/admin/entreprises/updatePassword\";\r\nimport { deleteEntreprise } from \"@/lib/actions/admin/entreprises/admin\";\r\nimport CreateEntrepriseAdminForm from \"@/components/form/admin/entreprises/create\";\r\n\r\ntype FetchEntreprise = [\r\n  {\r\n    id: string;\r\n    nom: string;\r\n    adresse: string;\r\n    email: string;\r\n    secteurs: [\r\n      {\r\n        secteur: {\r\n          id: string;\r\n          label: string;\r\n          couleur: string;\r\n        };\r\n      },\r\n    ];\r\n    contact: {\r\n      id: string;\r\n      nom: string;\r\n      prenom: string;\r\n      email: string;\r\n    };\r\n    deleteable: boolean;\r\n  },\r\n];\r\n\r\nfunction useUsers() {\r\n  return useQuery({\r\n    queryKey: [\"entreprises_admin\"],\r\n    queryFn: async (): Promise<FetchEntreprise> => {\r\n      const response = await fetch(`/api/admin/entreprises`);\r\n      return await response.json();\r\n    },\r\n  });\r\n}\r\n\r\nexport default function EntreprisesAdminPage() {\r\n  const [open, setOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { isError, data: utilisateurs, isFetching, refetch } = useUsers();\r\n\r\n  const [search, setSearch] = useQueryState(\"search\", { defaultValue: \"\" });\r\n\r\n  const filteredUtilisateurs = utilisateurs?.filter((item) => {\r\n    const searchTerm = search.toLowerCase();\r\n    return item.nom.toLowerCase().includes(searchTerm);\r\n  });\r\n  return (\r\n    <div className=\"flex w-full flex-col items-center\">\r\n      <div className=\"flex w-[90%] flex-col gap-10\">\r\n        <div className=\"flex w-full flex-col gap-4\">\r\n          <h1 className={\"text-3xl font-bold\"}>Les entreprises</h1>\r\n          <div className=\"flex w-full justify-between\">\r\n            <CreateEntrepriseAdminForm refetch={refetch} />\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Rechercher une entreprise...\"\r\n              className=\"w-[20%] border-black/50\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n              value={search || \"\"}\r\n            />\r\n          </div>\r\n        </div>\r\n        {isFetching ? (\r\n          <p>Les données sont entrain d&apos;être chargées...</p>\r\n        ) : isError ? (\r\n          <p className=\"text-red-500\">Une erreur est survenue</p>\r\n        ) : filteredUtilisateurs !== undefined &&\r\n          filteredUtilisateurs.length > 0 ? (\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Nom</TableHead>\r\n                <TableHead>Contact</TableHead>\r\n                <TableHead>Voir les informations</TableHead>\r\n                <TableHead>Modifier l&apos;entreprise</TableHead>\r\n                <TableHead>Modifier le contact de l&apos;entreprise</TableHead>\r\n                <TableHead>Modifier son mot de passe</TableHead>\r\n                <TableHead>Supprimer l&apos;entreprise</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {filteredUtilisateurs.map((entreprise) => (\r\n                <TableRow key={entreprise.id}>\r\n                  {/* NOM ET PRENOM */}\r\n                  <TableCell>{`${entreprise.nom}`}</TableCell>\r\n\r\n                  {/* LES INFORMATIONS DE L'UTILISATEUR */}\r\n                  <TableCell className=\"flex flex-col gap-1\">\r\n                    <p>\r\n                      {entreprise.contact.nom + \" \" + entreprise.contact.prenom}\r\n                    </p>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      <Icon src=\"mail\" />\r\n                      <p>{entreprise.email}</p>\r\n                    </div>\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <Dialog>\r\n                      <DialogTrigger asChild>\r\n                        <Button variant=\"outline\">\r\n                          <div className=\"flex items-center gap-1\">\r\n                            <Icon src=\"page\" />\r\n                            <p>Voir les détails</p>\r\n                          </div>\r\n                        </Button>\r\n                      </DialogTrigger>\r\n                      <DialogContent className=\"w-fit\">\r\n                        <DialogHeader>\r\n                          <DialogTitle className=\"text-xl font-bold\">\r\n                            Informations de l&apos;entreprise\r\n                          </DialogTitle>\r\n                        </DialogHeader>\r\n                        <div className=\"flex flex-col gap-4\">\r\n                          <div className=\"flex flex-wrap gap-2\">\r\n                            {entreprise.secteurs.map((secteur, index) => {\r\n                              return (\r\n                                <Badge\r\n                                  className=\"border-gray-500 bg-transparent text-gray-700\"\r\n                                  key={index}\r\n                                >\r\n                                  {secteur.secteur.label}\r\n                                </Badge>\r\n                              );\r\n                            })}\r\n                          </div>\r\n                          <InformationsOffreItem\r\n                            label={\r\n                              <div className=\"flex items-center gap-2\">\r\n                                <Icon src=\"building\" className=\"w-4\" />\r\n                                <p>Nom de l&apos;entreprise</p>\r\n                              </div>\r\n                            }\r\n                            value={<p>{entreprise.nom}</p>}\r\n                          />\r\n                          <div className=\"flex justify-between gap-7\">\r\n                            <InformationsOffreItem\r\n                              label={\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <Icon src=\"mail\" className=\"w-4\" />\r\n                                  <p>Mail</p>\r\n                                </div>\r\n                              }\r\n                              value={<p>{entreprise.email}</p>}\r\n                            />\r\n                            <InformationsOffreItem\r\n                              label={\r\n                                <div className=\"flex items-center gap-1\">\r\n                                  <Icon src=\"map-pin\" className=\"w-4\" />\r\n                                  <p>Adresse</p>\r\n                                </div>\r\n                              }\r\n                              value={<p>{entreprise.adresse}</p>}\r\n                            />\r\n                          </div>\r\n                          <Separator />\r\n                          <p className=\"font-semibold\">\r\n                            Contact de l&apos;entreprise\r\n                          </p>\r\n                          <div className=\"flex justify-between gap-7\">\r\n                            <InformationsOffreItem\r\n                              label={\r\n                                <div className=\"flex items-center gap-1\">\r\n                                  <Icon src=\"user\" className=\"w-4\" />\r\n                                  <p>Nom et prénom</p>\r\n                                </div>\r\n                              }\r\n                              value={\r\n                                <p>{`${entreprise.contact.nom} ${entreprise.contact.prenom}`}</p>\r\n                              }\r\n                            />\r\n                            <InformationsOffreItem\r\n                              label={\r\n                                <div className=\"flex items-center gap-2\">\r\n                                  <Icon src=\"mail\" className=\"w-4\" />\r\n                                  <p>Mail</p>\r\n                                </div>\r\n                              }\r\n                              value={<p>{entreprise.contact.email}</p>}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <DialogFooter className=\"sm:justify-start\">\r\n                          <DialogClose asChild>\r\n                            <Button type=\"button\" variant=\"secondary\">\r\n                              Fermer\r\n                            </Button>\r\n                          </DialogClose>\r\n                        </DialogFooter>\r\n                      </DialogContent>\r\n                    </Dialog>\r\n                  </TableCell>\r\n\r\n                  {/* MODIFIER L'ENTREPRISE */}\r\n                  <TableCell>\r\n                    <UpdateEntrepriseAdminInformationsForm\r\n                      entreprise={{\r\n                        id: entreprise.id,\r\n                        nom: entreprise.nom,\r\n                        email: entreprise.email,\r\n                        adresse: entreprise.adresse,\r\n                        secteurs: entreprise.secteurs.map((secteur) => {\r\n                          return secteur.secteur.id;\r\n                        }),\r\n                      }}\r\n                      refetch={refetch}\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <UpdateEntrepriseContactAdminForm\r\n                      contact={{\r\n                        id: entreprise.contact.id,\r\n                        nom: entreprise.contact.nom,\r\n                        prenom: entreprise.contact.prenom,\r\n                        email: entreprise.contact.email,\r\n                      }}\r\n                      refetch={refetch}\r\n                    />\r\n                  </TableCell>\r\n\r\n                  {/* MODIFIER MOT DE PASSE */}\r\n                  <TableCell>\r\n                    <UpdateEntrepriseAdminPasswordForm id={entreprise.id} />\r\n                  </TableCell>\r\n\r\n                  {/* SUPPRIMER L'UTILISATEUR */}\r\n                  <TableCell>\r\n                    {entreprise.deleteable ? (\r\n                      <AlertDialog open={open} onOpenChange={setOpen}>\r\n                        <AlertDialogTrigger asChild>\r\n                          <Button variant={\"destructive\"}>\r\n                            <div className=\"flex items-center gap-1\">\r\n                              <Icon src=\"trash\" />\r\n                              <p>Supprimer</p>\r\n                            </div>\r\n                          </Button>\r\n                        </AlertDialogTrigger>\r\n                        <AlertDialogContent>\r\n                          <AlertDialogHeader>\r\n                            <AlertDialogTitle>\r\n                              Êtes-vous vraiment sûr de supprimer\r\n                              l&apos;entreprise ?\r\n                            </AlertDialogTitle>\r\n                            <AlertDialogDescription>\r\n                              Cette action est irréversible, l&apos;entreprise\r\n                              devra se refaire un compte.\r\n                            </AlertDialogDescription>\r\n                          </AlertDialogHeader>\r\n                          <AlertDialogFooter>\r\n                            <AlertDialogCancel className=\"pointer\">\r\n                              Annuler\r\n                            </AlertDialogCancel>\r\n                            <Button\r\n                              className=\"pointer pointer bg-red-500 text-white hover:bg-red-600 hover:text-white\"\r\n                              onClick={async () => {\r\n                                setIsLoading(true);\r\n                                const response = await deleteEntreprise({\r\n                                  id: entreprise.id,\r\n                                });\r\n                                if (!response.success) {\r\n                                  setOpen(false);\r\n                                  setIsLoading(false);\r\n                                  toast.error(response.message);\r\n                                } else {\r\n                                  setOpen(false);\r\n                                  setIsLoading(false);\r\n                                  toast.success(response.message);\r\n                                  refetch();\r\n                                }\r\n                              }}\r\n                              disabled={isLoading}\r\n                            >\r\n                              {isLoading ? (\r\n                                <Loader2 className=\"animate-spin\" />\r\n                              ) : (\r\n                                \"Confirmer\"\r\n                              )}\r\n                            </Button>\r\n                          </AlertDialogFooter>\r\n                        </AlertDialogContent>\r\n                      </AlertDialog>\r\n                    ) : (\r\n                      <Button variant={\"disable\"} disabled>\r\n                        <div className=\"flex items-center gap-1\">\r\n                          <Icon src=\"trash-black\" />\r\n                          <p>Supprimer</p>\r\n                        </div>\r\n                      </Button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        ) : (\r\n          <div className=\"flex\">\r\n            {search !== \"\" ? (\r\n              <p className=\"font-semibold\">\r\n                Votre filtre ne correspond à aucune des entreprises.\r\n              </p>\r\n            ) : (\r\n              <>\r\n                <p>\r\n                  Il n&apos;y a pas d&apos;entreprises dans la base de données\r\n                </p>\r\n              </>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst InformationsOffreItem = ({\r\n  label,\r\n  value,\r\n}: {\r\n  label: React.ReactNode;\r\n  value: React.ReactNode;\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col gap-2\">\r\n      {label}\r\n      {value}\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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","debugId":null}}]
}